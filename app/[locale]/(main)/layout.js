import { Inter, IBM_Plex_Sans, IBM_Plex_Sans_Arabic } from "next/font/google";
import "./globals.css";
import { NextIntlClientProvider, useLocale, useTranslations } from "next-intl";
import { ThemeProvider } from "@/components/MaterialUI/MaterialUI";
import NavServer from "@/components/Nav/NavServer";
import Head from "next/head";
import { getTranslations } from "next-intl/server";
import { createMetadata } from "@/lib/utils";
import { LOCALE_TO_DIRECTION } from "@/i18n";
import Footer from "@/components/Footer/Footer";

const inter = Inter({ subsets: ["latin"] });

const ibmPlexSans = IBM_Plex_Sans({
  subsets: ["latin"],
  weight: ["400", "700"],
});

const ibmPlexSansArabic = IBM_Plex_Sans_Arabic({
  subsets: ["arabic"],
  weight: ["400", "700"],
});

//IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export async function generateMetadata({ params }) {
  const t = await getTranslations();

  return {
    ...createMetadata({
      title: t("meta.home.title"),
      description: t("meta.home.description"),
      keywords: t("meta.home.keywords"),
    }),
  };
}

export default async function RootLayout({ children }) {
  const locale = useLocale();
  let classNameValue = `${ibmPlexSans.className} Helvetica Neue, Arial, sans-serif`;
  if (locale === "ar") {
    classNameValue = `${ibmPlexSansArabic.className} Helvetica Neue, Arial, sans-serif`;
  }

  return (
    <NextIntlClientProvider>
      <ThemeProvider>
        <html lang={locale} dir={LOCALE_TO_DIRECTION[locale] || "ltr"}>
          <body className={`${classNameValue} flex flex-col h-screen`}>
            <div className='container'>
              <NavServer />
            </div>
            <main className='flex-grow container '>{children}</main>
            <div className='container'>
              <Footer />
            </div>
          </body>
        </html>
      </ThemeProvider>
    </NextIntlClientProvider>
  );
}
